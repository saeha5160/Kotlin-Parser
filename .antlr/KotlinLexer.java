// Generated from c:\Users\NEWSKY00\AppData\Local\Packages\CanonicalGroupLimited.Ubuntu18.04onWindows_79rhkp1fndgsc\LocalState\rootfs\home\saeha\work\Kotlin-Parser\Kotlin.g4 by ANTLR 4.8
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class KotlinLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.8", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, T__56=57, T__57=58, T__58=59, 
		T__59=60, T__60=61, T__61=62, T__62=63, T__63=64, T__64=65, T__65=66, 
		T__66=67, Comment=68, ID=69, NEXTLINE=70, INT=71, REAL=72, STRING=73, 
		WS=74;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
			"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
			"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
			"T__57", "T__58", "T__59", "T__60", "T__61", "T__62", "T__63", "T__64", 
			"T__65", "T__66", "Comment", "ID", "NEXTLINE", "INT", "REAL", "STRING", 
			"WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'package'", "'.'", "'import'", "'*'", "'/*'", "'*/'", "'fun'", 
			"':'", "'('", "','", "')'", "'{'", "'}'", "'='", "'return'", "'class'", 
			"'var'", "'val'", "'()'", "'+='", "'-='", "'*='", "'/='", "'if'", "'else'", 
			"'when'", "'->'", "'\"'", "'null'", "'||'", "'&&'", "'!='", "'=='", "'<'", 
			"'>'", "'<='", "'>='", "'.filter'", "'.sortedBy'", "'.map'", "'.forEach'", 
			"'it'", "'startWith'", "'uppercase'", "'!'", "'is'", "'in'", "'..'", 
			"'/'", "'+'", "'-'", "'++'", "'--'", "'for ('", "'step'", "'downTo'", 
			"'while ('", "'print'", "'println'", "'?'", "'Int'", "'Unit'", "'Real'", 
			"'String'", "'Array'", "'Double'", "'Any'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, "Comment", "ID", "NEXTLINE", 
			"INT", "REAL", "STRING", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public KotlinLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Kotlin.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2L\u01ef\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3"+
		"\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t"+
		"\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\20"+
		"\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22"+
		"\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\27"+
		"\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33"+
		"\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\36\3\36"+
		"\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3&"+
		"\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3"+
		")\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3,\3,\3,\3,\3,\3,\3"+
		",\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3.\3.\3/\3/\3/\3\60\3\60\3\60"+
		"\3\61\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\65\3\66\3\66"+
		"\3\66\3\67\3\67\3\67\3\67\3\67\3\67\38\38\38\38\38\39\39\39\39\39\39\3"+
		"9\3:\3:\3:\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3;\3<\3<\3<\3<\3<\3<\3<\3<\3"+
		"=\3=\3>\3>\3>\3>\3?\3?\3?\3?\3?\3@\3@\3@\3@\3@\3A\3A\3A\3A\3A\3A\3A\3"+
		"B\3B\3B\3B\3B\3B\3C\3C\3C\3C\3C\3C\3C\3D\3D\3D\3D\3E\3E\3E\3E\7E\u01b6"+
		"\nE\fE\16E\u01b9\13E\3E\7E\u01bc\nE\fE\16E\u01bf\13E\3F\6F\u01c2\nF\r"+
		"F\16F\u01c3\3G\3G\3H\5H\u01c9\nH\3H\5H\u01cc\nH\3H\6H\u01cf\nH\rH\16H"+
		"\u01d0\3I\5I\u01d4\nI\3I\5I\u01d7\nI\3I\6I\u01da\nI\rI\16I\u01db\3I\3"+
		"I\6I\u01e0\nI\rI\16I\u01e1\3J\6J\u01e5\nJ\rJ\16J\u01e6\3K\6K\u01ea\nK"+
		"\rK\16K\u01eb\3K\3K\2\2L\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f"+
		"\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63"+
		"\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62"+
		"c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087"+
		"E\u0089F\u008bG\u008dH\u008fI\u0091J\u0093K\u0095L\3\2\7\5\2\62;C\\c|"+
		"\4\2\f\f\17\17\3\2\62;\4\2$$\u0080\u0080\4\2\13\13\"\"\2\u01fa\2\3\3\2"+
		"\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17"+
		"\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2"+
		"\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3"+
		"\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3"+
		"\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2"+
		"=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3"+
		"\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2"+
		"\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2"+
		"c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3"+
		"\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2"+
		"\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3"+
		"\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2"+
		"\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\3\u0097"+
		"\3\2\2\2\5\u009f\3\2\2\2\7\u00a1\3\2\2\2\t\u00a8\3\2\2\2\13\u00aa\3\2"+
		"\2\2\r\u00ad\3\2\2\2\17\u00b0\3\2\2\2\21\u00b4\3\2\2\2\23\u00b6\3\2\2"+
		"\2\25\u00b8\3\2\2\2\27\u00ba\3\2\2\2\31\u00bc\3\2\2\2\33\u00be\3\2\2\2"+
		"\35\u00c0\3\2\2\2\37\u00c2\3\2\2\2!\u00c9\3\2\2\2#\u00cf\3\2\2\2%\u00d3"+
		"\3\2\2\2\'\u00d7\3\2\2\2)\u00da\3\2\2\2+\u00dd\3\2\2\2-\u00e0\3\2\2\2"+
		"/\u00e3\3\2\2\2\61\u00e6\3\2\2\2\63\u00e9\3\2\2\2\65\u00ee\3\2\2\2\67"+
		"\u00f3\3\2\2\29\u00f6\3\2\2\2;\u00f8\3\2\2\2=\u00fd\3\2\2\2?\u0100\3\2"+
		"\2\2A\u0103\3\2\2\2C\u0106\3\2\2\2E\u0109\3\2\2\2G\u010b\3\2\2\2I\u010d"+
		"\3\2\2\2K\u0110\3\2\2\2M\u0113\3\2\2\2O\u011b\3\2\2\2Q\u0125\3\2\2\2S"+
		"\u012a\3\2\2\2U\u0133\3\2\2\2W\u0136\3\2\2\2Y\u0140\3\2\2\2[\u014a\3\2"+
		"\2\2]\u014c\3\2\2\2_\u014f\3\2\2\2a\u0152\3\2\2\2c\u0155\3\2\2\2e\u0157"+
		"\3\2\2\2g\u0159\3\2\2\2i\u015b\3\2\2\2k\u015e\3\2\2\2m\u0161\3\2\2\2o"+
		"\u0167\3\2\2\2q\u016c\3\2\2\2s\u0173\3\2\2\2u\u017b\3\2\2\2w\u0181\3\2"+
		"\2\2y\u0189\3\2\2\2{\u018b\3\2\2\2}\u018f\3\2\2\2\177\u0194\3\2\2\2\u0081"+
		"\u0199\3\2\2\2\u0083\u01a0\3\2\2\2\u0085\u01a6\3\2\2\2\u0087\u01ad\3\2"+
		"\2\2\u0089\u01b1\3\2\2\2\u008b\u01c1\3\2\2\2\u008d\u01c5\3\2\2\2\u008f"+
		"\u01c8\3\2\2\2\u0091\u01d3\3\2\2\2\u0093\u01e4\3\2\2\2\u0095\u01e9\3\2"+
		"\2\2\u0097\u0098\7r\2\2\u0098\u0099\7c\2\2\u0099\u009a\7e\2\2\u009a\u009b"+
		"\7m\2\2\u009b\u009c\7c\2\2\u009c\u009d\7i\2\2\u009d\u009e\7g\2\2\u009e"+
		"\4\3\2\2\2\u009f\u00a0\7\60\2\2\u00a0\6\3\2\2\2\u00a1\u00a2\7k\2\2\u00a2"+
		"\u00a3\7o\2\2\u00a3\u00a4\7r\2\2\u00a4\u00a5\7q\2\2\u00a5\u00a6\7t\2\2"+
		"\u00a6\u00a7\7v\2\2\u00a7\b\3\2\2\2\u00a8\u00a9\7,\2\2\u00a9\n\3\2\2\2"+
		"\u00aa\u00ab\7\61\2\2\u00ab\u00ac\7,\2\2\u00ac\f\3\2\2\2\u00ad\u00ae\7"+
		",\2\2\u00ae\u00af\7\61\2\2\u00af\16\3\2\2\2\u00b0\u00b1\7h\2\2\u00b1\u00b2"+
		"\7w\2\2\u00b2\u00b3\7p\2\2\u00b3\20\3\2\2\2\u00b4\u00b5\7<\2\2\u00b5\22"+
		"\3\2\2\2\u00b6\u00b7\7*\2\2\u00b7\24\3\2\2\2\u00b8\u00b9\7.\2\2\u00b9"+
		"\26\3\2\2\2\u00ba\u00bb\7+\2\2\u00bb\30\3\2\2\2\u00bc\u00bd\7}\2\2\u00bd"+
		"\32\3\2\2\2\u00be\u00bf\7\177\2\2\u00bf\34\3\2\2\2\u00c0\u00c1\7?\2\2"+
		"\u00c1\36\3\2\2\2\u00c2\u00c3\7t\2\2\u00c3\u00c4\7g\2\2\u00c4\u00c5\7"+
		"v\2\2\u00c5\u00c6\7w\2\2\u00c6\u00c7\7t\2\2\u00c7\u00c8\7p\2\2\u00c8 "+
		"\3\2\2\2\u00c9\u00ca\7e\2\2\u00ca\u00cb\7n\2\2\u00cb\u00cc\7c\2\2\u00cc"+
		"\u00cd\7u\2\2\u00cd\u00ce\7u\2\2\u00ce\"\3\2\2\2\u00cf\u00d0\7x\2\2\u00d0"+
		"\u00d1\7c\2\2\u00d1\u00d2\7t\2\2\u00d2$\3\2\2\2\u00d3\u00d4\7x\2\2\u00d4"+
		"\u00d5\7c\2\2\u00d5\u00d6\7n\2\2\u00d6&\3\2\2\2\u00d7\u00d8\7*\2\2\u00d8"+
		"\u00d9\7+\2\2\u00d9(\3\2\2\2\u00da\u00db\7-\2\2\u00db\u00dc\7?\2\2\u00dc"+
		"*\3\2\2\2\u00dd\u00de\7/\2\2\u00de\u00df\7?\2\2\u00df,\3\2\2\2\u00e0\u00e1"+
		"\7,\2\2\u00e1\u00e2\7?\2\2\u00e2.\3\2\2\2\u00e3\u00e4\7\61\2\2\u00e4\u00e5"+
		"\7?\2\2\u00e5\60\3\2\2\2\u00e6\u00e7\7k\2\2\u00e7\u00e8\7h\2\2\u00e8\62"+
		"\3\2\2\2\u00e9\u00ea\7g\2\2\u00ea\u00eb\7n\2\2\u00eb\u00ec\7u\2\2\u00ec"+
		"\u00ed\7g\2\2\u00ed\64\3\2\2\2\u00ee\u00ef\7y\2\2\u00ef\u00f0\7j\2\2\u00f0"+
		"\u00f1\7g\2\2\u00f1\u00f2\7p\2\2\u00f2\66\3\2\2\2\u00f3\u00f4\7/\2\2\u00f4"+
		"\u00f5\7@\2\2\u00f58\3\2\2\2\u00f6\u00f7\7$\2\2\u00f7:\3\2\2\2\u00f8\u00f9"+
		"\7p\2\2\u00f9\u00fa\7w\2\2\u00fa\u00fb\7n\2\2\u00fb\u00fc\7n\2\2\u00fc"+
		"<\3\2\2\2\u00fd\u00fe\7~\2\2\u00fe\u00ff\7~\2\2\u00ff>\3\2\2\2\u0100\u0101"+
		"\7(\2\2\u0101\u0102\7(\2\2\u0102@\3\2\2\2\u0103\u0104\7#\2\2\u0104\u0105"+
		"\7?\2\2\u0105B\3\2\2\2\u0106\u0107\7?\2\2\u0107\u0108\7?\2\2\u0108D\3"+
		"\2\2\2\u0109\u010a\7>\2\2\u010aF\3\2\2\2\u010b\u010c\7@\2\2\u010cH\3\2"+
		"\2\2\u010d\u010e\7>\2\2\u010e\u010f\7?\2\2\u010fJ\3\2\2\2\u0110\u0111"+
		"\7@\2\2\u0111\u0112\7?\2\2\u0112L\3\2\2\2\u0113\u0114\7\60\2\2\u0114\u0115"+
		"\7h\2\2\u0115\u0116\7k\2\2\u0116\u0117\7n\2\2\u0117\u0118\7v\2\2\u0118"+
		"\u0119\7g\2\2\u0119\u011a\7t\2\2\u011aN\3\2\2\2\u011b\u011c\7\60\2\2\u011c"+
		"\u011d\7u\2\2\u011d\u011e\7q\2\2\u011e\u011f\7t\2\2\u011f\u0120\7v\2\2"+
		"\u0120\u0121\7g\2\2\u0121\u0122\7f\2\2\u0122\u0123\7D\2\2\u0123\u0124"+
		"\7{\2\2\u0124P\3\2\2\2\u0125\u0126\7\60\2\2\u0126\u0127\7o\2\2\u0127\u0128"+
		"\7c\2\2\u0128\u0129\7r\2\2\u0129R\3\2\2\2\u012a\u012b\7\60\2\2\u012b\u012c"+
		"\7h\2\2\u012c\u012d\7q\2\2\u012d\u012e\7t\2\2\u012e\u012f\7G\2\2\u012f"+
		"\u0130\7c\2\2\u0130\u0131\7e\2\2\u0131\u0132\7j\2\2\u0132T\3\2\2\2\u0133"+
		"\u0134\7k\2\2\u0134\u0135\7v\2\2\u0135V\3\2\2\2\u0136\u0137\7u\2\2\u0137"+
		"\u0138\7v\2\2\u0138\u0139\7c\2\2\u0139\u013a\7t\2\2\u013a\u013b\7v\2\2"+
		"\u013b\u013c\7Y\2\2\u013c\u013d\7k\2\2\u013d\u013e\7v\2\2\u013e\u013f"+
		"\7j\2\2\u013fX\3\2\2\2\u0140\u0141\7w\2\2\u0141\u0142\7r\2\2\u0142\u0143"+
		"\7r\2\2\u0143\u0144\7g\2\2\u0144\u0145\7t\2\2\u0145\u0146\7e\2\2\u0146"+
		"\u0147\7c\2\2\u0147\u0148\7u\2\2\u0148\u0149\7g\2\2\u0149Z\3\2\2\2\u014a"+
		"\u014b\7#\2\2\u014b\\\3\2\2\2\u014c\u014d\7k\2\2\u014d\u014e\7u\2\2\u014e"+
		"^\3\2\2\2\u014f\u0150\7k\2\2\u0150\u0151\7p\2\2\u0151`\3\2\2\2\u0152\u0153"+
		"\7\60\2\2\u0153\u0154\7\60\2\2\u0154b\3\2\2\2\u0155\u0156\7\61\2\2\u0156"+
		"d\3\2\2\2\u0157\u0158\7-\2\2\u0158f\3\2\2\2\u0159\u015a\7/\2\2\u015ah"+
		"\3\2\2\2\u015b\u015c\7-\2\2\u015c\u015d\7-\2\2\u015dj\3\2\2\2\u015e\u015f"+
		"\7/\2\2\u015f\u0160\7/\2\2\u0160l\3\2\2\2\u0161\u0162\7h\2\2\u0162\u0163"+
		"\7q\2\2\u0163\u0164\7t\2\2\u0164\u0165\7\"\2\2\u0165\u0166\7*\2\2\u0166"+
		"n\3\2\2\2\u0167\u0168\7u\2\2\u0168\u0169\7v\2\2\u0169\u016a\7g\2\2\u016a"+
		"\u016b\7r\2\2\u016bp\3\2\2\2\u016c\u016d\7f\2\2\u016d\u016e\7q\2\2\u016e"+
		"\u016f\7y\2\2\u016f\u0170\7p\2\2\u0170\u0171\7V\2\2\u0171\u0172\7q\2\2"+
		"\u0172r\3\2\2\2\u0173\u0174\7y\2\2\u0174\u0175\7j\2\2\u0175\u0176\7k\2"+
		"\2\u0176\u0177\7n\2\2\u0177\u0178\7g\2\2\u0178\u0179\7\"\2\2\u0179\u017a"+
		"\7*\2\2\u017at\3\2\2\2\u017b\u017c\7r\2\2\u017c\u017d\7t\2\2\u017d\u017e"+
		"\7k\2\2\u017e\u017f\7p\2\2\u017f\u0180\7v\2\2\u0180v\3\2\2\2\u0181\u0182"+
		"\7r\2\2\u0182\u0183\7t\2\2\u0183\u0184\7k\2\2\u0184\u0185\7p\2\2\u0185"+
		"\u0186\7v\2\2\u0186\u0187\7n\2\2\u0187\u0188\7p\2\2\u0188x\3\2\2\2\u0189"+
		"\u018a\7A\2\2\u018az\3\2\2\2\u018b\u018c\7K\2\2\u018c\u018d\7p\2\2\u018d"+
		"\u018e\7v\2\2\u018e|\3\2\2\2\u018f\u0190\7W\2\2\u0190\u0191\7p\2\2\u0191"+
		"\u0192\7k\2\2\u0192\u0193\7v\2\2\u0193~\3\2\2\2\u0194\u0195\7T\2\2\u0195"+
		"\u0196\7g\2\2\u0196\u0197\7c\2\2\u0197\u0198\7n\2\2\u0198\u0080\3\2\2"+
		"\2\u0199\u019a\7U\2\2\u019a\u019b\7v\2\2\u019b\u019c\7t\2\2\u019c\u019d"+
		"\7k\2\2\u019d\u019e\7p\2\2\u019e\u019f\7i\2\2\u019f\u0082\3\2\2\2\u01a0"+
		"\u01a1\7C\2\2\u01a1\u01a2\7t\2\2\u01a2\u01a3\7t\2\2\u01a3\u01a4\7c\2\2"+
		"\u01a4\u01a5\7{\2\2\u01a5\u0084\3\2\2\2\u01a6\u01a7\7F\2\2\u01a7\u01a8"+
		"\7q\2\2\u01a8\u01a9\7w\2\2\u01a9\u01aa\7d\2\2\u01aa\u01ab\7n\2\2\u01ab"+
		"\u01ac\7g\2\2\u01ac\u0086\3\2\2\2\u01ad\u01ae\7C\2\2\u01ae\u01af\7p\2"+
		"\2\u01af\u01b0\7{\2\2\u01b0\u0088\3\2\2\2\u01b1\u01b2\7\61\2\2\u01b2\u01b3"+
		"\7\61\2\2\u01b3\u01b7\3\2\2\2\u01b4\u01b6\13\2\2\2\u01b5\u01b4\3\2\2\2"+
		"\u01b6\u01b9\3\2\2\2\u01b7\u01b5\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b8\u01bd"+
		"\3\2\2\2\u01b9\u01b7\3\2\2\2\u01ba\u01bc\5\u008dG\2\u01bb\u01ba\3\2\2"+
		"\2\u01bc\u01bf\3\2\2\2\u01bd\u01bb\3\2\2\2\u01bd\u01be\3\2\2\2\u01be\u008a"+
		"\3\2\2\2\u01bf\u01bd\3\2\2\2\u01c0\u01c2\t\2\2\2\u01c1\u01c0\3\2\2\2\u01c2"+
		"\u01c3\3\2\2\2\u01c3\u01c1\3\2\2\2\u01c3\u01c4\3\2\2\2\u01c4\u008c\3\2"+
		"\2\2\u01c5\u01c6\t\3\2\2\u01c6\u008e\3\2\2\2\u01c7\u01c9\7/\2\2\u01c8"+
		"\u01c7\3\2\2\2\u01c8\u01c9\3\2\2\2\u01c9\u01cb\3\2\2\2\u01ca\u01cc\7-"+
		"\2\2\u01cb\u01ca\3\2\2\2\u01cb\u01cc\3\2\2\2\u01cc\u01ce\3\2\2\2\u01cd"+
		"\u01cf\t\4\2\2\u01ce\u01cd\3\2\2\2\u01cf\u01d0\3\2\2\2\u01d0\u01ce\3\2"+
		"\2\2\u01d0\u01d1\3\2\2\2\u01d1\u0090\3\2\2\2\u01d2\u01d4\7/\2\2\u01d3"+
		"\u01d2\3\2\2\2\u01d3\u01d4\3\2\2\2\u01d4\u01d6\3\2\2\2\u01d5\u01d7\7-"+
		"\2\2\u01d6\u01d5\3\2\2\2\u01d6\u01d7\3\2\2\2\u01d7\u01d9\3\2\2\2\u01d8"+
		"\u01da\t\4\2\2\u01d9\u01d8\3\2\2\2\u01da\u01db\3\2\2\2\u01db\u01d9\3\2"+
		"\2\2\u01db\u01dc\3\2\2\2\u01dc\u01dd\3\2\2\2\u01dd\u01df\7\60\2\2\u01de"+
		"\u01e0\t\4\2\2\u01df\u01de\3\2\2\2\u01e0\u01e1\3\2\2\2\u01e1\u01df\3\2"+
		"\2\2\u01e1\u01e2\3\2\2\2\u01e2\u0092\3\2\2\2\u01e3\u01e5\t\5\2\2\u01e4"+
		"\u01e3\3\2\2\2\u01e5\u01e6\3\2\2\2\u01e6\u01e4\3\2\2\2\u01e6\u01e7\3\2"+
		"\2\2\u01e7\u0094\3\2\2\2\u01e8\u01ea\t\6\2\2\u01e9\u01e8\3\2\2\2\u01ea"+
		"\u01eb\3\2\2\2\u01eb\u01e9\3\2\2\2\u01eb\u01ec\3\2\2\2\u01ec\u01ed\3\2"+
		"\2\2\u01ed\u01ee\bK\2\2\u01ee\u0096\3\2\2\2\17\2\u01b7\u01bd\u01c3\u01c8"+
		"\u01cb\u01d0\u01d3\u01d6\u01db\u01e1\u01e6\u01eb\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}